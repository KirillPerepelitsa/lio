#!/usr/bin/env php
<?php
if (file_exists(dirname(__DIR__, 3) . '/autoload.php')) {
	require_once dirname(__DIR__, 3) . '/autoload.php';
} else {
	require_once dirname(__DIR__) . '/vendor/autoload.php';
}

use Symfony\Component\Console\Application;
use Console\App\Commands\Apps\AppsDescribeCommand;
use Console\App\Commands\Apps\AppsListCommand;
use Console\App\Commands\AuthCommand;
use Console\App\Commands\Apps\AppsNewCommand;
use GuzzleHttp\Client;
use Console\App\Commands\Files\FilesListCommand;
use Console\App\Commands\Apps\AppsDeleteCommand;
use Console\App\Commands\Files\FilesUploadCommand;
use Console\App\Commands\SelfUpdateCommand;
use Console\App\Commands\AppBackups\AppBackupCreateCommand;
use Console\App\Commands\Files\FilesUpdateCommand;
use Console\App\Commands\FilesDownloadCommand;

$app = new Application();
$app->add(new AppsListCommand(new Client()));
$app->add(new AppsDescribeCommand(new Client()));
$app->add(new AppsNewCommand(new Client()));
$app->add(new AuthCommand());
$app->add(new FilesListCommand(new Client()));
$app->add(new AppsDeleteCommand(new Client()));
$app->add(new FilesUploadCommand(new Client()));
$app->add(new SelfUpdateCommand());
$app->add(new AppBackupCreateCommand(new Client()));
$app->add(new FilesUpdateCommand(new Client()));
$app->add(new AppsDeleteCommand(new Client()));
$app->add(new FilesDownloadCommand(new Client()));
$app->run();